<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Media">

    <select id="selectClassifyId" parameterType="zh.co.item.bank.db.entity.TbQuestionClassifyBean"
        resultType="java.lang.Integer">
        select id from tb_question_classify where delete_flag = '0'
        <if test="exam !=null &amp; exam !=''">
            and exam = #{exam,jdbcType=CHAR}
        </if>
        <if test="jlptLevel !=null &amp; jlptLevel !=''">
            and jlpt_level = #{jlptLevel,jdbcType=CHAR}
        </if>
        <if test="jtestLevel !=null &amp; jtestLevel !=''">
            and jtest_level = #{jtestLevel,jdbcType=CHAR}
        </if>
        <if test="examType !=null &amp; examType !=''">
            and exam_type = #{examType,jdbcType=CHAR}
        </if>
        group by id
        order by id
    </select>

	<select id="selectMedia" parameterType="java.util.Map"
		resultType="zh.co.item.bank.model.entity.MediaModel">
		select a.*,b.time,b.`status` from (
			select id, media_path, classify_id, source from tb_media
			where id not in
			(select media_id from tb_media_collection where user_id=#{userId,jdbcType=INTEGER} group by media_id)
			and delete_flag='0' and classify_id=#{classifyId,jdbcType=INTEGER}
		) a left join tb_media_collection b
        on a.id = b.media_id
        <if test="status !=null">
        where status = #{status}
        </if>
        order by b.status
        limit 1
	</select>

	<select id="selectQuestionByMediaId" parameterType="INTEGER"
		resultType="zh.co.item.bank.model.entity.MediaModel">
		select * from tb_media_question where delete_flag = '0' and media_id = #{mediaId}
	</select>

	<select id="selectMediaBySource" parameterType="java.lang.String"
		resultType="zh.co.item.bank.model.entity.MediaModel">
		select * from tb_media where delete_flag = '0' and  source = #{source}
	</select>

    <select id="selectStructuresByClassifyId" parameterType="INTEGER"
        resultType="zh.co.item.bank.db.entity.TbQuestionStructureBean">
        select id, title, classify_id from tb_question_structure where classify_id=#{classifyId,jdbcType=INTEGER}
        order by id
    </select>
    
    <resultMap id="mediaQuestionsResult" type="zh.co.item.bank.model.entity.MediaQuestionStructure">  
      <result property="title" column="title"/>
      <result property="classifyId" column="classify_id"/>
      <collection property="question" ofType="zh.co.item.bank.model.entity.MediaModel" >
        <id column="no" property="no" jdbcType="INTEGER" />
        <result column="rowNo" property="rowNo" jdbcType="CHAR" />
        <result column="context" property="context" jdbcType="CHAR" />
        <result column="context_img" property="contextImg" jdbcType="LONGVARBINARY" />
        <result column="a" property="a" jdbcType="CHAR" />
        <result column="b" property="b" jdbcType="CHAR" />
        <result column="c" property="c" jdbcType="CHAR" />
        <result column="d" property="d" jdbcType="CHAR" />
        <result column="answer" property="answer" jdbcType="CHAR" />
        <result column="analysis" property="analysis" jdbcType="CHAR" />
        <result column="structure_id" property="structureId" jdbcType="INTEGER" />
        <result column="media_id" property="mediaId" jdbcType="INTEGER" />
        <result column="delete_flag" property="deleteFlag" jdbcType="CHAR" />
      </collection>
    </resultMap>

    <select id="selectMediaQuestions" parameterType="java.util.Map" resultMap="mediaQuestionsResult">
       SELECT t1.title, t1.classify_id, t3.*, (@rowNO := @rowNO+1) as rowNo
          FROM tb_question_structure t1,tb_question_classify t2,
           tb_media_question t3, (select @rowNO :=0) t4
          WHERE t1.classify_id = t2.id AND t1.id = t3.structure_id and t3.delete_flag = '0'
          and t1.classify_id = #{classifyId,jdbcType=INTEGER} AND t3.media_id = #{mediaId,jdbcType=INTEGER}
        order by t3.no
    </select>

    <!-- 查成绩用 -->
    <select id="selectMediaStructure" parameterType="java.util.Map" resultMap="mediaQuestionsResult">
       SELECT (@rowNO := @rowNO+1) as rowNo, t1.title, t1.classify_id, t5.source, t3.*
            FROM tb_question_structure t1,tb_question_classify t2,
           tb_media_question t3, (select @rowNO :=0) t4, tb_media t5
          WHERE t1.classify_id = t2.id AND t1.id = t3.structure_id and t3.delete_flag = #{deleteFlag}
          AND t5.source = #{source} and t5.id=t3.media_id
        order by t3.no
    </select>

    <select id="selectMediaIdByUsers" parameterType="java.util.Map"
        resultType="zh.co.item.bank.db.entity.TbMediaCollectionBean">
       select media_id, user_id from tb_media_collection
       where user_id=#{newUserId}
       and media_id in (select media_id from tb_media_collection where user_id=#{oldUserId})
       group by media_id
    </select>


    <insert id="insertMediaCollection" parameterType="zh.co.item.bank.db.entity.TbMediaCollectionBean">
		insert into tb_media_collection (
		        media_id,
				user_id,
				question_id,
				my_answer,
				status)
		values 
		<foreach collection="list" item="item" index="index" separator=",">
					(#{item.mediaId,jdbcType=INTEGER},
					#{item.userId,jdbcType=INTEGER},
					#{item.questionId,jdbcType=INTEGER},
					#{item.myAnswer,jdbcType=CHAR},
					#{item.status,jdbcType=CHAR})
		</foreach>
	</insert>

    <update id="updateUserId" parameterType="java.util.Map">
        update tb_media_collection set user_id = #{oldUserId} where user_id = #{newUserId}
    </update>

	<delete id="deleteMediaCollectionBySource" parameterType="java.util.Map" >
	  delete from tb_media_collection where
	  media_id = (select id from tb_media where source = #{source,jdbcType=CHAR} limit 1)
	  and user_id = #{userId,jdbcType=INTEGER}
	</delete>

	<delete id="deleteMediaCollectionOld" parameterType="zh.co.item.bank.db.entity.TbMediaCollectionBean" >
	  delete from tb_media_collection where (media_id, user_id) in
	  <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
          (#{item.mediaId,jdbcType=CHAR}, #{item.userId,jdbcType=INTEGER})
      </foreach>
	</delete>
</mapper>