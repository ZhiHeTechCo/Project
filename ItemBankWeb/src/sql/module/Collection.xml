<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Collection">

	<select id="selectCollectionForOne" parameterType="zh.co.item.bank.model.entity.ExamModel"
		resultType="zh.co.item.bank.db.entity.TbCollectionBean">
		select * from `tb_collection`
		where id = #{userId} and
		question_id = #{no}
		limit 1
	</select>

<!-- 
    <select id="selectCollectionByUsers" parameterType="INTEGER"
        resultType="zh.co.item.bank.db.entity.TbExamCollectionBean">
        select id, question_id, update_time from tb_collection
        where id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
            #{item,jdbcType=INTEGER}
        </foreach>
        group by question_id, id order by create_time desc
    </select>
 -->

    <select id="selectOldCollectionByUsers" parameterType="java.util.Map"
        resultType="zh.co.item.bank.db.entity.TbCollectionBean">
        select t1.question_id,t1.id from (
			(select id, question_id, update_time from tb_collection where id=#{oldUserId} and delete_flag='0') t1,
			(select id, question_id, update_time from tb_collection where id=#{newUserId} and delete_flag='0') t2
			)
		where t1.question_id=t2.question_id and t1.update_time<![CDATA[ < ]]>t2.update_time
    </select>

	<!-- 记叙题更新后的不具合数据 -->
    <select id="selectCollection" resultType="zh.co.item.bank.db.entity.TbCollectionBean">
		select c.* from tb_collection_detail a, tb_question b,tb_collection c
		where a.question_id=b.`no`
		and a.question_id=c.question_id
		and a.user_id=c.id
		and a.my_answer!=b.answer
		and c.finish in(9)
		and a.create_time>'2017-08-03 08:08:58'
		group by a.question_id
    </select>

	<!-- 批量插入做题记录 -->
	<insert id="insertCollections" parameterType="zh.co.item.bank.db.entity.TbCollectionBean">
		insert into tb_collection (
		        id,
				question_id,
				finish)
		values 
		<foreach collection="list" item="item" index="index" separator=",">
					(#{item.id,jdbcType=INTEGER},
					#{item.questionId,jdbcType=INTEGER},
					#{item.finish,jdbcType=CHAR})
		</foreach>
	</insert>

	<update id="updateCollection" parameterType="zh.co.item.bank.db.entity.TbCollectionBean">
		update tb_collection
		<set>
			<if test="finish != null">
				finish = #{finish,jdbcType=CHAR},
			</if>
			update_time = SYSDATE()
		</set>
		where id = #{id,jdbcType=SMALLINT}
		and question_id = #{questionId,jdbcType=SMALLINT}
	</update>

	<update id="updateCollections" parameterType="zh.co.item.bank.db.entity.TbCollectionBean">
		update tb_collection set finish='0', update_time = SYSDATE()
		where (id, question_id) in
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
            (#{item.id,jdbcType=SMALLINT}, #{item.questionId,jdbcType=SMALLINT})
        </foreach>
	</update>

    <!-- 帐号合并更新ID -->
	<update id="updateCollectionUserId" parameterType="java.util.Map">
		update tb_collection set id=#{oldUserId,jdbcType=SMALLINT}
		where id = #{newUserId,jdbcType=SMALLINT}
	</update>

    <!-- 帐号合并删除旧数据 -->
	<delete id="deleteCollectionOld" parameterType="zh.co.item.bank.db.entity.TbCollectionBean">
		delete from tb_collection
		where (id, question_id) in
		<foreach collection="list" item="item" index="index" open="(" separator="," close=")"> 
            (#{item.id,jdbcType=SMALLINT}, #{item.questionId})
        </foreach>
	</delete>

</mapper>